If tlDatabases.DAM='WebService'
	If pbReturnCount
		;  $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) )     ;; result will be returned in pFieldReference, row() contains the parameters for the call
		Do ioWeb.$callFetch(lnCount,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pnOHH_SEQ,pDateFrom,pDateTo,pbReturnCount),lnCount.$type,0,ilRESTextensions))
		If ioWeb.irResponse.httpStatusCode=200
			;  the result should be in this object     ;; however there may be a SQL error
			If irErrorSQL.NativeErrorText<>''
				Quit method kFalse
			End If
			Quit method lnCount
		Else
			Quit method kFalse
		End If
	Else
		Do ioWeb.$callFetch(llProduct,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pnOHH_SEQ,pDateFrom,pDateTo,pbReturnCount),llProduct.$type,1,ilRESTextensions))
		If ioWeb.irResponse.httpStatusCode=200
			;  the result should be in this object     ;; however there may be a SQL error
			If irErrorSQL.NativeErrorText<>''
				Quit method kFalse
			End If
			Quit method llProduct
		Else
			Quit method kFalse
		End If
	End If
End If

Calculate ldNextDate as pDateTo+1

Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
If lbImmediateSession
	Do $cinst.$SetSession(loSession,loStatement)
Else If not(ibGoodConnectionToDb)
	Quit method kFalse
End If

;  out of Products
;  a.  purchased     ;; they have a supplier number
;       ;; PRD_SUPP_CODE will have a value
;  b.  by-product     ;; is a product we make but not for sale - it is for input into another process
;       ;; PRD_SUPP_CODE will be null
;  c.  product     ;; something that we sell

;  overhead products have been purchased from customers and placed into an overhead account

Begin statement
If pbReturnCount
	Sta: {select count(*) from (}
End If

Sta: {select [$cinst.$selectnames()]}
Sta: {from [$cinst.$servertablenames]}
Sta: {,  [lrPublication.$servertablenames()]}
Sta: {,  [lrEcoInvoiceInDetail.$servertablenames()]}
Sta: {,  [lrEcoInvoiceInHeader.$servertablenames()]}
Sta: {,  [lrOverheadDetail.$servertablenames()]}
Sta: {,  [lrOverheadGroupOrg.$servertablenames()]}
Sta: {,  [lrOverheadAccount.$servertablenames()]}
;  Product to Publication
Sta: {where PEP_PRD_REF = PRD_SEQ}
;  Publication to ecoInvoiceInDetail
Sta: {and     EID_PEP_REF = PEP_SEQ}
;  ecoInvoiceInDetail to overheadDetail
Sta: {and     OHD_EID_REF = EID_SEQ}
;  overheadDetail to overheadOrgLinks
Sta: {and    OHD_OOL_REF = OOL_SEQ}
;  overheadOrgLinks to overheadAccount
Sta: {and    OOL_OHH_REF = OHH_SEQ}
;  our overheads
Sta: {and    OOL_GO_REF = @[$ctask.trGroupOrg.GO_SEQ]}
Sta: {and    EIH_PWHEN between @[pDateFrom] and @[pDateTo]}
;  specific overhead account
Sta: {and    OHH_SEQ = @[pnOHH_SEQ]}
If $clib().$name<>'CONFERENCE'
	Sta: {and PRD_META = @[inMeta]}
End If
Sta:
Sta: {union}

;  products we have manufactured
Sta: {select [$cinst.$selectnames()]}
Sta: {from [$cinst.$servertablenames]}
Sta: {,  [lrProductBatch.$servertablenames()]}
Sta: {,  [lrOverheadDetail.$servertablenames()]}
Sta: {,  [lrOverheadGroupOrg.$servertablenames()]}
Sta: {,  [lrOverheadAccount.$servertablenames()]}
OK message  {Fix this:  PB_PRD_REF does not exist}
Quit method

;  Product to Calculation header
Sta: {where PB_PRD_REF = PRD_SEQ}
;  calculation header to overheadDetail
Sta: {and    OHD_PB_REF = PB_SEQ}
;  overheadDetail to overheadOrgLinks
Sta: {and    OHD_OOL_REF = OOL_SEQ}
;  overheadOrgLinks to overheadAccount
Sta: {and    OOL_OHH_REF = OHH_SEQ}
;  our overheads
Sta: {and    OOL_GO_REF = @[$ctask.trGroupOrg.GO_SEQ]}
;  Sta: and    date_trunc('day',PB_CWHEN) between @[pDateFrom] and @[pDateTo]
Sta: {and    PB_CWHEN between @[pDateFrom] and @[ldNextDate]}
;  specific overhead account
Sta: {and    OHH_SEQ = @[pnOHH_SEQ]}
If $clib().$name<>'CONFERENCE'
	Sta: {and PRD_META = @[inMeta]}
End If

If pbReturnCount
	Sta: {)}
End If

End statement

If pbReturnCount
	Do $cinst.$executesqlandfetchinto(lnCount) Returns lbOK
Else
	Do $cinst.$executesqlandfetch(llProduct) Returns lbOK
End If

If lbImmediateSession
	Do $cinst.$SetSession(#NULL,#NULL,kTrue)
End If

If pbReturnCount
	Quit method lnCount
Else
	Quit method llProduct
End If